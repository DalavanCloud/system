#!/bin/bash

HERE=`pwd`
HOST=`hostname`
BACKUPDIR=${HOME}/.dotfiles.bk__`date +%F_\%T | sed s/:/-/g`

# backups a given file with a link to the new one
backup() {
    # Force create/backup the symlink.
    TARGET=${HOME}/${2}
    LINK=${HERE}/${1}
    if [ -f $TARGET ]
    then
        cp -arH $TARGET ${BACKUPDIR}
        rm -rf $TARGET
    fi
    ln -fs $LINK $TARGET
}

replace() {
    # Force create/backup the symlink.
    TARGET=${HOME}/${2}
    LINK=${HERE}/${1}
    [[ -e "$TARGET" ]]  && rm -rf $TARGET
    ln -fs $LINK $TARGET
}

# a safe makedir
makedir() {
    if [ ! -d ${HOME}/${1} ]
    then
        mkdir -p ${HOME}/${1}
    fi
}

mirrorfiles() {
    mkdir -p ${BACKUPDIR}
    makedir ".tmux"

    replace ""                      ".dotfiles"
    backup "bash/bashrc"            ".bashrc"
    backup "tmux/tmux.conf"         ".tmux.conf"
    backup "tmux/tmux.child"        ".tmux/.tmux.child"
    backup "tmux/tmux.child2"       ".tmux/.tmux.child2"
    backup "tmux/tmux.two"          ".tmux/.tmux.two"
    backup "tmux/tmux.three"        ".tmux/.tmux.three"
    backup "tmux/tmux.usage"        ".tmux/.tmux.usage"
    backup "git/gitconfig"          ".gitconfig"
    backup "git/gitignore"          ".gitignore"
    backup "vim/vimrc"              ".vimrc"

    case $HOST in
        serenity)
            backup "bash/bashrc.serenity"      ".bashrc.local"
            ;;
        dain)
            backup "bash/bashrc.ccmr"          ".bashrc.local"
            ;;
        ept)
            backup "bash/bashrc.ccmr"          ".bashrc.local"
            ;;
        kempt)
            backup "bash/bashrc.ccmr"          ".bashrc.local"
            ;;
        *)
            touch ${HERE}/bash/bashrc.$HOST
            backup "bash/bashrc.$HOST"         ".bashrc.local"
            ;;
    esac
}


# Verify that the user wants to proceed before potentially overwriting files
echo
echo "Warning: This may overwrite your existing dotfiles."
read -p "Continue? (y/n) " -n 1
echo

if [[ $REPLY =~ ^[Yy]$ ]] ; then
    mirrorfiles
    source ${HOME}/.bashrc
else
    echo "Aborting..."
    exit 1
fi
